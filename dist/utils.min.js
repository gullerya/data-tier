import{Observable}from"./object-observer.min.js";const DEFAULT_TIE_TARGET_PROVIDER="defaultTieTarget",CHANGE_EVENT_NAME_PROVIDER="changeEventName",PARAM_SPLITTER=/\s*=>\s*/,MULTI_PARAMS_SPLITTER=/\s*[,;]\s*/,DEFAULT_VALUE_ELEMENTS={INPUT:1,SELECT:1,TEXTAREA:1},DEFAULT_SRC_ELEMENTS={IMG:1,IFRAME:1,SOURCE:1},DEFAULT_HREF_ELEMENTS={A:1,ANIMATE:1,AREA:1,BASE:1,DISCARD:1,IMAGE:1,LINK:1,PATTERN:1,use:1},DEFAULT_CHANGE_ELEMENTS={INPUT:1,SELECT:1,TEXTAREA:1},randomKeySource="abcdefghijklmnopqrstuvwxyz0123456789",randomKeySourceLen=randomKeySource.length;export{DEFAULT_TIE_TARGET_PROVIDER,ensureObservable,getTargetProperty,extractViewParams,CHANGE_EVENT_NAME_PROVIDER,addChangeListener,delChangeListener,getPath,setPath,callViewFunction,getRandomKey};class Parameter{constructor(e,t,r,n,a,o){this.tieKey=e,this.rawPath=t,this.path=r,this.targetProperty=n,this.isFunctional=a,this.fParams=o,this.iClasses=null}}function ensureObservable(e){return e?Observable.isObservable(e)?e:Observable.from(e):Observable.from({})}function getTargetProperty(e){let t=e[DEFAULT_TIE_TARGET_PROVIDER];if(!t){const r=e.nodeName;t="INPUT"===r&&"checkbox"===e.type?"checked":r in DEFAULT_VALUE_ELEMENTS?"value":r in DEFAULT_SRC_ELEMENTS?"src":r in DEFAULT_HREF_ELEMENTS?"href":"textContent"}return t}function extractViewParams(e,t){const r=e.getAttribute("data-tie");return r?parseViewParams(r,e,t):null}function parseViewParams(e,t,r){const n=[],a={},o=e.split(MULTI_PARAMS_SPLITTER),s=o.length;let i,l,E,c=0;for(;c<s;c++)if((i=o[c])&&(l&&(l+=","+i),!(i.indexOf("(")>0&&(l=i).indexOf(")")<0)))try{l?(E=parseFunctionParam(l,r),l=null):E=parsePropertyParam(i,t,r),E.targetProperty in a?console.error(`elements's property '${E.targetProperty}' tied more than once; all but first dismissed`):(n.push(E),a[E.targetProperty]=!0)}catch(e){console.error(`failed to parse one of a multi param parts (${i}), skipping it`,e)}return n}function parseFunctionParam(e,t){const r=e.split(/[()]/),n=r[1].split(/\s*,\s*/).map(e=>{const t=e.split(":");if(!t.length||t.length>2||!t[0])throw new Error("invalid function tied value: "+e);const r=t.length>1?t[1]:"";return{tieKey:t[0],rawPath:r,path:r.split(".").filter(e=>e)}});if(!n.length)throw new Error(`functional tie parameter MUST have at least one tied argument, '${e}' doesn't`);return new Parameter(null,null,null,r[0],!0,n)}function parsePropertyParam(e,t,r){const n=e.split(PARAM_SPLITTER);1===n.length&&n.push(getTargetProperty(t));const a=n[0].split(":");if(!a.length||a.length>2||!a[0])throw new Error(`invalid tie parameter '${e}'; expected (example): "orders:0.address.street, orders:0.address.apt => title"`);let o=a[0];"scope"===a[0]&&(o=getScopeTieKey(t,r));const s=a.length>1?a[1]:"",i=new Parameter(o,s,s.split(".").filter(e=>e),n[1],!1,null);return"classList"===i.targetProperty&&(i.iClasses=Array.from(t.classList)),i}function getScopeTieKey(e,t){let r=e,n=r[t];for(;!n&&r.parentNode;)(r=r.parentNode).host&&(r=r.host),n=r[t];return n||null}function addChangeListener(e,t){const r=obtainChangeEventName(e);r&&e.addEventListener(r,t)}function delChangeListener(e,t){const r=obtainChangeEventName(e);r&&e.removeEventListener(r,t)}function obtainChangeEventName(e){let t=e[CHANGE_EVENT_NAME_PROVIDER];return t||e.nodeName in DEFAULT_CHANGE_ELEMENTS&&(t="change"),t}function getPath(e,t){if(!e)return null;const r=t,n=r.length;if(!n)return e;let a,o=e,s=0;for(;s<n-1;s++)if(null===(o=o[a=r[s]])||void 0===o)return o;return o[r[s]]}function setPath(e,t,r){if(!e)return;const n=t.length;let a,o,s=0;for(;s<n-1;s++)if((o=e[a=t[s]])&&"object"==typeof o)e=o;else if(void 0===o||null===o)e[a]={},e=e[a];else if("object"!=typeof o)return void console.error("setting deep path MAY NOT override primitives along the way");e[t[s]]=r}function callViewFunction(e,t,r){try{e[t].apply(e,r)}catch(n){console.error(`failed to call '${t}' of '${e}' with '${r}'`,n)}}function getRandomKey(e){let t="",r=e;const n=crypto.getRandomValues(new Uint8Array(e));for(;r;)r--,t+=randomKeySource.charAt(randomKeySourceLen*n[r]/256);return t}