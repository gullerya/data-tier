import{VIEW_PARAMS_KEY}from"./utils.min.js";export const namedViews={},rootedViews=new WeakMap;export{obtainTieViews,deleteTieViews,addView,delView};function obtainTieViews(e){let t;return"string"==typeof e?(t=namedViews[e])||(t={},namedViews[e]=t):(t=rootedViews.get(e))||(t={},rootedViews.set(e,t)),t}function deleteTieViews(e){"string"==typeof e?delete namedViews[e]:rootedViews.delete(e)}function addView(e,t){let i,n,s,o,d=t.length;for(;d;)if((i=t[--d]).isFunctional)for(o=(n=i.fParams).length;o;)seekAndInsertView(s=n[--o],e);else seekAndInsertView(i,e);e[VIEW_PARAMS_KEY]=t}function seekAndInsertView(e,t){const i=e.tieKey,n=e.rawPath;let s;"string"==typeof i?(s=namedViews[i])||(s={},namedViews[i]=s):(s=rootedViews.get(i))||(s={},rootedViews.set(i,s));let o=s[n];o||(o=[],s[n]=o),o.indexOf(t)<0&&o.push(t)}function delView(e,t){let i,n,s,o,d=t.length;for(;d;)if((i=t[--d]).isFunctional)for(o=(n=i.fParams).length;o;)seekAndRemoveView(s=n[--o],e);else seekAndRemoveView(i,e);delete e[VIEW_PARAMS_KEY]}function seekAndRemoveView(e,t){const i=e.tieKey,n=e.rawPath;let s;const o=(s="string"==typeof i?namedViews[i]:rootedViews.get(i))[n],d=o?o.indexOf(t):-1;d>=0&&o.splice(d,1)}