import{VIEW_PARAMS_KEY}from"./utils.min.js";const namedViews={},kelemViews=new WeakMap;export{obtainTieViews,deleteTieViews,addView,delView};function obtainTieViews(e){let i;return"string"==typeof e?(i=namedViews[e])||(i={},namedViews[e]=i):(i=kelemViews.get(e))||(i={},kelemViews.set(e,i)),i}function deleteTieViews(e){"string"==typeof e?delete namedViews[e]:kelemViews.delete(e)}function addView(e,i){let t,n,s,w,V=i.length;for(;V;)if((t=i[--V]).isFunctional)for(w=(n=t.fParams).length;w;)seekAndInsertView(s=n[--w],e);else seekAndInsertView(t,e);e[VIEW_PARAMS_KEY]=i}function seekAndInsertView(e,i){const t=e.tieKey,n=e.rawPath;let s;"string"==typeof t?(s=namedViews[t])||(s={},namedViews[t]=s):(s=kelemViews.get(t))||(s={},kelemViews.set(t,s));let w=s[n];w||(w=[],s[n]=w),w.indexOf(i)<0&&w.push(i)}function delView(e,i){let t,n,s,w,V=i.length;for(;V;)if((t=i[--V]).isFunctional)for(w=(n=t.fParams).length;w;)seekAndRemoveView(s=n[--w],e);else seekAndRemoveView(t,e);delete e[VIEW_PARAMS_KEY]}function seekAndRemoveView(e,i){const t=e.tieKey,n=e.rawPath;let s;const w=(s="string"==typeof t?namedViews[t]:kelemViews.get(t))[n],V=w?w.indexOf(i):-1;V>=0&&w.splice(V,1)}