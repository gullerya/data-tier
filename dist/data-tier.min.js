import{Observable}from"./object-observer.min.js";export const CHANGE_EVENT_NAME_PROVIDER="changeEventName";export const DEFAULT_TIE_TARGET_PROVIDER="defaultTieTarget";export const ties=new Ties;export const addRootDocument=e=>{if(!e||Node.DOCUMENT_NODE!==e.nodeType&&Node.DOCUMENT_FRAGMENT_NODE!==e.nodeType)throw new Error("invalid argument, NULL or not one of: DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE");if(roots.has(e))return console.warn("any root document may be added only once"),!1;initDocumentObserver(e),console.debug("DT: scanning the document for a views...");const t=performance.now();return addTree(e),console.debug("DT: ... scanning the "+e+" for a views DONE (took "+Math.floor(100*(performance.now()-t))/100+"ms"),roots.add(e),!0};export const removeRootDocument=e=>roots.has(e)?(discard(e),roots.delete(e),!0):(console.warn("no root document "+e+" known"),!1);console.info("DT: starting initialization...");const initStartTime=performance.now(),PRIVATE_MODEL_SYMBOL=Symbol("private-tie-model-key"),ELEMENT_PROCESSED_SYMBOL=Symbol("element-processed"),roots=new WeakSet,views={},viewsParams=new WeakMap,PARAM_SPLITTER=/\s*=>\s*/,MULTI_PARAMS_SPLITTER=/\s*[,;]\s*/;class Tie{constructor(e){this[PRIVATE_MODEL_SYMBOL]=null,Object.defineProperty(this,"name",{value:e}),Object.seal(this)}get model(){return this[PRIVATE_MODEL_SYMBOL]}set model(e){const t=this[PRIVATE_MODEL_SYMBOL];if(e!==t){const o=ensureObservable(e);o&&o.observe(this.processDataChanges.bind(this)),this[PRIVATE_MODEL_SYMBOL]=o,this.processDataChanges([{path:[]}]),t&&t.revoke()}}processDataChanges(e){const t=this.name,o=views[t],r=Object.keys(o),n={};let a,i,s,l,c,d,f,h,u,m="";if(r.length)for(a=0,i=e.length;a<i;a++){if(l=(s=e[a]).object,c=s.path,!Array.isArray(l)||"insert"!==s.type&&"delete"!==s.type||isNaN(c[c.length-1])){const e=c.length;if(e>1){for(let t=0;t<e-1;t++)m+=c[t]+".";m+=c[e-1]}else 1===e&&(m=c[0])}else{if(n[m=c.slice(0,-1).join(".")]===l)continue;n[m]=l,s=null}for(d=r.length;d;)if(0===(f=r[--d]).indexOf(m))for(u=(h=o[f]).length;u;)update(h[--u],m,s)}}}function Ties(){const e={},t=/^[a-zA-Z0-9]+$/;function o(e){if(!e||"string"!=typeof e)throw new Error("tie name MUST be a non empty string");if(!t.test(e))throw new Error("tie name MUST contain alphanumeric characters ONLY (use "+t+' to check yourself); "'+e+'" not fits');return!0}this.get=function(t){return o(t),e[t]},this.create=function(t,r){if(e[t])throw new Error("tie ("+t+") is already present and MAY NOT be re-created");o(t),ensureObservable(r);const n=new Tie(t);return e[t]=n,t in views||(views[t]={}),n.model=r,n},this.remove=function(t){let r;if("object"==typeof t&&t.name)r=t.name;else{if("string"!=typeof t||!o(t))throw new Error("tie to remove MUST either be a valid tie name or tie self");r=t}delete views[r];const n=e[r];n&&(n[PRIVATE_MODEL_SYMBOL]&&n[PRIVATE_MODEL_SYMBOL].revoke(),delete e[r])},Object.freeze(this)}function ensureObservable(e){if(void 0===e||null===e)return e;if("object"!=typeof e)throw new Error(e+" is not an object");if(Observable.isObservable(e))return e;if(Observable){if(e.observe||e.unobserve||e.revoke)throw new Error(e+" is not of type Observable and can not be transformed into Observable (some of the properties already occupied?)");return Observable.from(e)}throw new Error(e+" is not of type Observable and no embedded Observable implementation found")}function getPath(e,t){if(!e)return null;const o=t.length;let r,n=0;for(;n<o-1;n++)if(null===(e=e[r=t[n]])||void 0===e)return null;return e[t[n]]}function setPath(e,t,o){if(!e)return;const r=t.length;let n,a=0;for(;a<r-1;a++)e[n=t[a]]&&"object"==typeof e[n]||(e[n]={}),e=e[n];e[t[a]]=o}function changeListener(e){const t=e.currentTarget,o=getDefaultTargetProperty(t),r=viewsParams.get(t);let n,a,i,s;for(i=r.length;i;)(n=r[--i]).targetProperty===o&&((a=ties.get(n.tieName))?(s=t[o],setPath(a[PRIVATE_MODEL_SYMBOL],n.path,s)):console.warn('no Tie identified by "'+n.tieName+'" found'))}function addChangeListenerIfRelevant(e){const t=obtainChangeEventName(e);t&&e.addEventListener(t,changeListener)}function delChangeListener(e){const t=obtainChangeEventName(e);t&&e.removeEventListener(t,changeListener)}function obtainChangeEventName(e){let t=e[CHANGE_EVENT_NAME_PROVIDER];return t||"INPUT"!==e.nodeName&&"SELECT"!==e.nodeName&&"TEXTAREA"!==e.nodeName||(t="change"),t}function add(e){if(e[ELEMENT_PROCESSED_SYMBOL]=!0,e.matches(":defined"))processAddedElement(e);else{let t="";if(e.localName.indexOf("-")>0)t=e.localName;else{const o=/.*is\s*=\s*"([^"]+)"\s*.*/.exec(e.outerHTML);o&&o.length>1&&(t=o[1])}t?customElements.whenDefined(t).then(()=>processAddedElement(e)):(console.warn("failed to determine yet undefined custom element name of "+e+" to wait for definition; processing as usual"),processAddedElement(e))}}function processAddedElement(e){const t=extractTieParams(e);let o,r,n,a,i,s=0;for(i=t.length;s<i;s++)o=t[s].tieName,r=t[s].rawPath,(a=(n=views[o]||(views[o]={}))[r]||(n[r]=[])).indexOf(e)<0&&(a.push(e),viewsParams.set(e,t),update(e),addChangeListenerIfRelevant(e));e.shadowRoot&&addRootDocument(e.shadowRoot)}function extractTieParams(e){let t,o=[];return e&&e.dataset&&(t=e.dataset.tie)&&(o=parseTiePropertiesParam(t,e)),o}function parseTiePropertyParam(e,t){const o=e.split(PARAM_SPLITTER);1===o.length&&o.push(getDefaultTargetProperty(t));const r=o[0].split(":");if(!r.length||r.length>2||!r[0])throw new Error('invalid tie value; found: "'+e+'"; expected (example of multi param, one with default target): "orders:0.address.street, orders:0.address.apt => title"');const n=r.length>1?r[1]:"";return{tieName:r[0],rawPath:n,path:n.split(".").filter(e=>e),targetProperty:o[1]}}function parseTiePropertiesParam(e,t){const o=[],r={},n=e.split(MULTI_PARAMS_SPLITTER),a=n.length;let i,s,l=0;for(;l<a;l++)if(i=n[l])try{(s=parseTiePropertyParam(i,t)).targetProperty in r?console.error("elements's property \""+s.targetProperty+'" tied more than once; all but first ties dismissed'):(o.push(s),r[s.targetProperty]=!0)}catch(e){console.error("failed to parse one of a multi param parts ("+i+"), skipping it",e)}return o}function getDefaultTargetProperty(e){let t=e[DEFAULT_TIE_TARGET_PROVIDER];if(!t){const o=e.nodeName;t="INPUT"===o&&"checkbox"===e.type?"checked":"INPUT"===o||"SELECT"===o||"TEXTAREA"===o?"value":"IMG"===o||"IFRAME"===o||"SOURCE"===o?"src":"textContent"}return t}function update(e,t,o){const r=viewsParams.get(e);let n,a,i,s,l,c,d=0;for(l=r.length;d<l;d++)n=r[d],void 0!==(a=ties.get(n.tieName))&&(t&&0!==n.rawPath.indexOf(t)||(i=a.model,void 0===(s=o&&t===n.rawPath&&void 0!==o.value?o.value:getPath(i,n.path))&&(s=""),"value"===(c=n.targetProperty)&&"INPUT"===e.nodeName&&"checkbox"===e.type?e.checked=s:"href"===c?e.href.baseVal=s:e[c]=s))}function addTree(e){let t;e.childElementCount?(t=Array.from(e.querySelectorAll("*"))).unshift(e):t=[e];let o,r=t.length;for(;r;)try{o=t[--r],Node.ELEMENT_NODE!==o.nodeType||o[ELEMENT_PROCESSED_SYMBOL]||add(o)}catch(e){console.error("failed to process/add element",e)}}function discard(e){if(e.querySelectorAll){const t=e.querySelectorAll("*"),o=t.length;let r,n,a,i,s,l,c,d=0;for(;d<=o;d++){if(r=d<o?t[d]:e,n=viewsParams.get(r)){for(l=0,c=n.length;l<c;l++)a=n[l],views[a.tieName]&&(s=(i=views[a.tieName][a.rawPath]).indexOf(r))>=0&&(i.splice(s,1),delChangeListener(r));viewsParams.delete(r)}r.shadowRoot&&removeRootDocument(r.shadowRoot)}}}function move(e,t,o){let r,n,a,i,s,l,c;if(t){for(n=0,a=(r=viewsParams.get(e)).length;n<a;n++)i=r[n],views[i.tieName]&&(l=views[i.tieName][i.rawPath])&&(c=l.indexOf(e))>=0&&l.splice(c,1);delChangeListener(e)}if(o){for(r=parseTiePropertiesParam(o,e),viewsParams.set(e,r),n=0,a=r.length;n<a;n++)i=r[n],(l=(s=views[i.tieName]||(views[i.tieName]={}))[i.rawPath]||(s[i.rawPath]=[])).indexOf(e)<0&&(l.push(e),update(e,i.rawPath));addChangeListenerIfRelevant(e)}}function processDomChanges(e){const t=e.length;let o,r,n,a,i,s,l,c,d,f=0;for(;f<t;f++)if("attributes"===(a=(n=e[f]).type))i=n.attributeName,move(o=n.target,n.oldValue,o.getAttribute(i));else if("childList"===a){for(l=(s=n.addedNodes).length;l;)r=(o=s[--l]).nodeType,Node.ELEMENT_NODE===r&&addTree(o);for(d=(c=n.removedNodes).length;d;)r=(o=c[--d]).nodeType,Node.ELEMENT_NODE===r&&discard(o)}}function initDocumentObserver(e){console.debug("DT: initializing DOM observer on document"),new MutationObserver(processDomChanges).observe(e,{childList:!0,subtree:!0,attributes:!0,attributeOldValue:!0,attributeFilter:["data-tie"],characterData:!1,characterDataOldValue:!1})}addRootDocument(document),console.info("DT: ... initialization DONE (took "+Math.floor(100*(performance.now()-initStartTime))/100+"ms)");