import{ensureObservable,DEFAULT_TIE_TARGET_PROVIDER,getTargetProperty,extractViewParams,CHANGE_EVENT_NAME_PROVIDER,addChangeListener,delChangeListener,getPath,setPath}from"./dt-utils.min.js";export{DEFAULT_TIE_TARGET_PROVIDER,CHANGE_EVENT_NAME_PROVIDER};export const ties=new Ties;export const addRootDocument=e=>{if(!e||Node.DOCUMENT_NODE!==e.nodeType&&Node.DOCUMENT_FRAGMENT_NODE!==e.nodeType)throw new Error("invalid argument, NULL or not one of: DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE");if(roots.has(e))return console.warn("any root document may be added only once"),!1;initDocumentObserver(e),console.debug("DT: scanning the document for a views...");const t=performance.now();return addTree(e),console.debug("DT: ... scanning the "+e+" for a views DONE (took "+Math.floor(100*(performance.now()-t))/100+"ms"),roots.add(e),!0};export const removeRootDocument=e=>roots.has(e)?(dropTree(e),roots.delete(e),!0):(console.warn("no root document "+e+" known"),!1);console.info("DT: starting initialization...");const initStartTime=performance.now(),ELEMENT_PROCESSED_SYMBOL=Symbol("element-processed"),VIEW_PARAMS_KEY=Symbol("view.params.key"),roots=new WeakSet,views={};class Tie{constructor(e,t){this.key=e,this.model=ensureObservable(t),this.ownModel=this.model!==t,this.observer=Tie.processDataChanges.bind(this),this.model.observe(this.observer),Object.freeze(this)}static processDataChanges(e){const t=this.key,o=this.model,n=views[t],r=Object.keys(n),i={};let s,a,d,l,c,h,f,E,u,m="";if(r.length)for(s=0,a=e.length;s<a;s++){if(l=(d=e[s]).object,c=d.path,!Array.isArray(l)||"insert"!==d.type&&"delete"!==d.type||isNaN(c[c.length-1])){const e=c.length;if(e>1){for(let t=0;t<e-1;t++)m+=c[t]+".";m+=c[e-1]}else 1===e&&(m=c[0])}else{if(i[m=c.slice(0,-1).join(".")]===l)continue;i[m]=l,d=null}for(h=r.length;h;)if(0===(f=r[--h]).indexOf(m))for(u=(E=n[f]).length;u;)updateFromTie(E[--u],m,d,t,o)}}}function Ties(){const e={},t=/^[a-zA-Z0-9]+$/;this.get=function(t){const o=e[t];return o?o.model:void 0},this.create=function(o,n){if(e[o])throw new Error('tie "'+o+'" already exists');if(function(e){if(!e||"string"!=typeof e)throw new Error("tie key MUST be a non empty string");if(!t.test(e))throw new Error("tie key MUST match "+t+'; "'+e+'" is not')}(o),null===n)throw new Error("initial model, when provided, MUST NOT be null");o in views||(views[o]={});const r=new Tie(o,n);return e[o]=r,e[o].observer([{path:[]}]),r.model},this.remove=function(t){let o;if("object"==typeof t)o=Object.keys(e).find(o=>e[o].model===t);else{if("string"!=typeof t)throw new Error("tie to remove MUST either be a valid tie key or tie self");o=t}delete views[o];const n=e[o];n&&(n.model&&n.ownModel&&n.model.revoke(),delete e[o])},Object.freeze(this)}function changeListener(e){const t=e.currentTarget,o=getTargetProperty(t),n=t[VIEW_PARAMS_KEY];let r,i,s,a=n.length;for(;a;)(r=n[--a]).targetProperty===o&&(i=ties.get(r.tieKey))&&(s=t[o],setPath(i,r.path,s))}function add(e){if(e[ELEMENT_PROCESSED_SYMBOL]=!0,e.matches(":defined")){const t=extractViewParams(e);if(e[VIEW_PARAMS_KEY]=t,t){let o=t.length;for(;o;){const n=t[--o],r=n.tieKey,i=n.rawPath,s=views[r]||(views[r]={}),a=s[i]||(s[i]=[]);a.indexOf(e)<0&&(a.push(e),updateFromView(e),addChangeListener(e,changeListener))}}e.shadowRoot&&addRootDocument(e.shadowRoot)}else waitUndefined(e)}function waitUndefined(e){let t="";if(e.localName.indexOf("-")>0)t=e.localName;else{const o=/.*is\s*=\s*"([^"]+)"\s*.*/.exec(e.outerHTML);o&&o.length>1&&(t=o[1])}t?customElements.whenDefined(t).then(()=>add(e)):console.warn("failed to determine tag of yet undefined custom element "+e+", abandoning")}function updateFromTie(e,t,o,n,r){const i=e[VIEW_PARAMS_KEY];let s=i.length;for(;s;){const a=i[--s];if(a.tieKey===n&&0===a.rawPath.indexOf(t)){let n;o&&void 0!==o.value&&t===a.rawPath?o&&(n=o.value):n=getPath(r,a.path),void 0===n&&(n="");const i=a.targetProperty;"href"===i?e.href.baseVal=n:e[i]=n}}}function updateFromView(e,t){const o=e[VIEW_PARAMS_KEY];let n=o.length;for(;n;){const r=o[--n],i=ties.get(r.tieKey);if(void 0!==i&&(!t||0===r.rawPath.indexOf(t))){let t=getPath(i,r.path);void 0===t&&(t="");const o=r.targetProperty;"href"===o?e.href.baseVal=t:e[o]=t}}}function addTree(e){let t;e.childElementCount?(t=Array.from(e.querySelectorAll("*"))).unshift(e):t=[e];let o=t.length;for(;o;)try{const e=t[--o];Node.ELEMENT_NODE!==e.nodeType||e[ELEMENT_PROCESSED_SYMBOL]||add(e)}catch(e){console.error("failed to process/add element",e)}}function dropTree(e){let t;e.childElementCount?(t=Array.from(e.querySelectorAll("*"))).unshift(e):t=[e];let o=t.length;for(;o;){const e=t[--o],n=e[VIEW_PARAMS_KEY];if(n){let t=n.length;for(;t;){const o=n[--t];if(!views[o.tieKey])continue;const r=views[o.tieKey][o.rawPath],i=r.indexOf(e);i>=0&&(r.splice(i,1),delChangeListener(e,changeListener))}delete e[VIEW_PARAMS_KEY]}e.shadowRoot&&removeRootDocument(e.shadowRoot)}}function move(e,t,o){let n,r,i,s;if(t){for(r=0,i=(n=e[VIEW_PARAMS_KEY]).length;r<i;r++){const t=n[r];if(!views[t.tieKey])continue;const o=views[t.tieKey][t.rawPath];o&&(s=o.indexOf(e))>=0&&o.splice(s,1)}delChangeListener(e,changeListener)}if(o&&(n=extractViewParams(e))){for(e[VIEW_PARAMS_KEY]=n,r=0,i=n.length;r<i;r++){const t=n[r],o=views[t.tieKey]||(views[t.tieKey]={}),i=o[t.rawPath]||(o[t.rawPath]=[]);i.indexOf(e)<0&&(i.push(e),updateFromView(e,t.rawPath))}addChangeListener(e,changeListener)}}function processDomChanges(e){const t=e.length;let o,n,r,i,s,a,d,l,c,h=0;for(;h<t;h++)if("attributes"===(i=(r=e[h]).type))s=r.attributeName,move(o=r.target,r.oldValue,o.getAttribute(s));else if("childList"===i){for(d=(a=r.addedNodes).length;d;)n=(o=a[--d]).nodeType,Node.ELEMENT_NODE===n&&addTree(o);for(c=(l=r.removedNodes).length;c;)n=(o=l[--c]).nodeType,Node.ELEMENT_NODE===n&&dropTree(o)}}function initDocumentObserver(e){console.debug("DT: initializing DOM observer on document"),new MutationObserver(processDomChanges).observe(e,{childList:!0,subtree:!0,attributes:!0,attributeOldValue:!0,attributeFilter:["data-tie"],characterData:!1,characterDataOldValue:!1})}addRootDocument(document),console.info("DT: ... initialization DONE (took "+Math.floor(100*(performance.now()-initStartTime))/100+"ms)");