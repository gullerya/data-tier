import{Observable}from"./object-observer.min.js";export const CHANGE_EVENT_NAME_PROVIDER="changeEventName";export const DEFAULT_TIE_TARGET_PROVIDER="defaultTieTarget";export const ties=new Ties;export const addRootDocument=e=>{if(!e||Node.DOCUMENT_NODE!==e.nodeType&&Node.DOCUMENT_FRAGMENT_NODE!==e.nodeType)throw new Error("invalid argument, NULL or not one of: DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE");if(roots.has(e))return console.warn("any root document may be added only once"),!1;initDocumentObserver(e),console.debug("DT: scanning the "+e+" for a views...");const t=performance.now();return addTree(e),console.debug("DT: ... scanning the "+e+" for a views DONE (took "+Math.floor(100*(performance.now()-t))/100+"ms"),roots.add(e),!0};export const removeRootDocument=e=>roots.has(e)?(discard(e),roots.delete(e),!0):(console.warn("no root document "+e+" known"),!1);console.info("DT: starting initialization...");const initStartTime=performance.now(),initParams={},PRIVATE_MODEL_SYMBOL=Symbol("private-tie-model-key"),roots=new WeakSet,views={},viewsParams=new WeakMap,PARAM_SPLITTER=/\s*=>\s*/,MULTI_PARAMS_SPLITTER=/\s*[,;]\s*/;Array.from(new URL(import.meta.url).searchParams).forEach(e=>{initParams[e[0]]=e[1]}),Object.keys(initParams).length?(console.info("DT: init params are as following"),console.dir(initParams)):console.info("DT: no init params found");class Tie{constructor(e){this[PRIVATE_MODEL_SYMBOL]=null,Object.defineProperty(this,"name",{value:e}),Object.seal(this)}get model(){return this[PRIVATE_MODEL_SYMBOL]}set model(e){const t=this[PRIVATE_MODEL_SYMBOL];if(e!==t){const o=ensureObservable(e);o&&o.observe(this.processDataChanges.bind(this)),this[PRIVATE_MODEL_SYMBOL]=o,this.processDataChanges([{path:[]}]),t&&t.revoke()}}processDataChanges(e){const t=this.name,o=views[t],n=Object.keys(o),r={};let a,s,i,l,c,d,f,h,m,u="";if(n.length)for(a=0,s=e.length;a<s;a++){if(l=(i=e[a]).object,c=i.path,!Array.isArray(l)||"insert"!==i.type&&"delete"!==i.type||isNaN(c[c.length-1])){const e=c.length;if(e>1){for(let t=0;t<e-1;t++)u+=c[t]+".";u+=c[e-1]}else 1===e&&(u=c[0])}else{if(r[u=c.slice(0,-1).join(".")]===l)continue;r[u]=l,i=null}for(d=n.length;d;)if(0===(f=n[--d]).indexOf(u))for(m=(h=o[f]).length;m;)update(h[--m],u,i)}}}function Ties(){const e={},t=/^[a-zA-Z0-9]+$/;function o(e){if(!e||"string"!=typeof e)throw new Error("tie name MUST be a non empty string");if(!t.test(e))throw new Error("tie name MUST contain alphanumeric characters ONLY (use "+t+' to check yourself); "'+e+'" not fits');return!0}this.get=function(t){return o(t),e[t]},this.create=function(t,n){if(e[t])throw new Error("tie ("+t+") is already present and MAY NOT be re-created");o(t),ensureObservable(n);const r=new Tie(t);return e[t]=r,Object.prototype.hasOwnProperty.call(views,t)||(views[t]={}),r.model=n,r},this.remove=function(t){let n;if("object"==typeof t&&t.name)n=t.name;else{if("string"!=typeof t||!o(t))throw new Error("tie to remove MUST either be a valid tie name or tie self");n=t}delete views[n];const r=e[n];r&&(r[PRIVATE_MODEL_SYMBOL]&&r[PRIVATE_MODEL_SYMBOL].revoke(),delete e[n])},Object.freeze(this)}function ensureObservable(e){if(void 0===e||null===e)return e;if("object"!=typeof e)throw new Error(e+" is not an object");if(Observable.isObservable(e))return e;if(Observable){if(e.observe||e.unobserve||e.revoke)throw new Error(e+" is not of type Observable and can not be transformed into Observable (some of the properties already occupied?)");return Observable.from(e)}throw new Error(e+" is not of type Observable and no embedded Observable implementation found")}function getPath(e,t){if(!e)return null;const o=t.length;let n,r=0;for(;r<o;r++)if(void 0===(e=e[n=t[r]]))return null;return e}function setPath(e,t,o){if(!e)return;const n=t.length;let r,a=0;for(;a<n-1;a++)e[r=t[a]]&&"object"==typeof e[r]?e=e[r]:(e={})[r]=e;e[t[a]]=o}function changeListener(e){const t=e.currentTarget,o=getDefaultTargetProperty(t),n=viewsParams.get(t);let r,a,s,i;for(s=n.length;s;)(r=n[--s]).targetProperty===o&&((a=ties.get(r.tieName))?(i=t[o],setPath(a[PRIVATE_MODEL_SYMBOL],r.path,i)):console.warn('no Tie identified by "'+r.tieName+'" found'))}function addChangeListenerIfRelevant(e){const t=obtainChangeEventName(e);t&&e.addEventListener(t,changeListener)}function delChangeListener(e){const t=obtainChangeEventName(e);t&&e.removeEventListener(t,changeListener)}function obtainChangeEventName(e){let t=e[CHANGE_EVENT_NAME_PROVIDER];return t||"INPUT"!==e.nodeName&&"SELECT"!==e.nodeName&&"TEXTAREA"!==e.nodeName||(t="change"),t}function add(e){if(e.matches(":defined"))processAddedElement(e);else{let t="";if(e.localName.indexOf("-")>0)t=e.localName;else{const o=/.*is\s*=\s*"([^"]+)"\s*.*/.exec(e.outerHTML);o&&o.length>1&&(t=o[1])}t?customElements.whenDefined(t).then(()=>processAddedElement(e)):(console.warn("failed to determine yet undefined custom element name of "+e+" to wait for definition; processing as usual"),processAddedElement(e))}}const vt=Symbol("visited");function processAddedElement(e){e[vt]&&console.warn("visited"),e[vt]=1;const t=extractTieParams(e);let o,n,r,a,s,i=0;for(s=t.length;i<s;i++)o=t[i].tieName,n=t[i].rawPath,(a=(r=views[o]||(views[o]={}))[n]||(r[n]=[])).indexOf(e)<0&&(a.push(e),viewsParams.set(e,t),update(e),addChangeListenerIfRelevant(e));e.shadowRoot&&addRootDocument(e.shadowRoot)}function extractTieParams(e){let t,o=[];return e&&e.dataset&&(t=e.dataset.tie)&&(o=parseTiePropertiesParam(t,e)),o}function parseTiePropertyParam(e,t){const o=e.split(PARAM_SPLITTER);1===o.length&&o.push(getDefaultTargetProperty(t));const n=o[0].split(":");if(!n.length||n.length>2||!n[0])throw new Error('invalid tie value; found: "'+e+'"; expected (example): "orders:0.address.street => textContent"');const r=n.length>1?n[1]:"";return{tieName:n[0],rawPath:r,path:r.split(".").filter(e=>e),targetProperty:o[1]}}function parseTiePropertiesParam(e,t){if(!e||"string"!=typeof e)throw new Error('invalid tie value; found: "'+e+'"; expected (example): "orders:0.address.street => textContent, orders:0.address.apt => title"');const o=[],n=e.split(MULTI_PARAMS_SPLITTER),r=n.length;let a=0;for(;a<r;a++)if(n[a])try{o.push(parseTiePropertyParam(n[a],t))}catch(e){console.error("failed to parse one of a multi param parts",e)}return o}function getDefaultTargetProperty(e){let t=e[DEFAULT_TIE_TARGET_PROVIDER];if(!t){const o=e.nodeName;t="INPUT"===o&&"checkbox"===e.type?"checked":"INPUT"===o||"SELECT"===o||"TEXTAREA"===o?"value":"IMG"===o||"IFRAME"===o||"SOURCE"===o?"src":"textContent"}return t}function update(e,t,o){const n=viewsParams.get(e);let r,a,s,i,l,c,d=0;for(l=n.length;d<l;d++)r=n[d],t&&0!==r.rawPath.indexOf(t)||(a=ties.get(r.tieName))&&(s=a.model,void 0===(i=o&&t===r.rawPath&&void 0!==o.value?o.value:getPath(s,r.path))&&(i=""),"value"===(c=r.targetProperty)&&"INPUT"===e.nodeName&&"checkbox"===e.type?e.checked=i:"href"===c?e.href.baseVal=i:e[c]=i)}function addTree(e){const t=e.querySelectorAll("*");let o=t.length;for(Node.ELEMENT_NODE===e.nodeType&&add(e);o;)try{add(t[--o])}catch(e){console.error("failed to process/add element",e)}}function discard(e){if(e.querySelectorAll){const t=e.querySelectorAll("*"),o=t.length;let n,r,a,s,i,l,c,d=0;for(;d<=o;d++){if(n=d<o?t[d]:e,r=viewsParams.get(n)){for(l=0,c=r.length;l<c;l++)a=r[l],views[a.tieName]&&(i=(s=views[a.tieName][a.rawPath]).indexOf(n))>=0&&(s.splice(i,1),delChangeListener(n));viewsParams.delete(n)}n.shadowRoot&&removeRootDocument(n.shadowRoot)}}}function move(e,t,o){let n,r,a,s,i,l,c;if(t){for(r=0,a=(n=viewsParams.get(e)).length;r<a;r++)s=n[r],views[s.tieName]&&(l=views[s.tieName][s.rawPath])&&(c=l.indexOf(e))>=0&&l.splice(c,1);delChangeListener(e)}if(o){for(n=parseTiePropertiesParam(o,e),viewsParams.set(e,n),r=0,a=n.length;r<a;r++)s=n[r],(l=(i=views[s.tieName]||(views[s.tieName]={}))[s.rawPath]||(i[s.rawPath]=[])).indexOf(e)<0&&(l.push(e),update(e,s.rawPath));addChangeListenerIfRelevant(e)}}function processDomChanges(e){const t=e.length;let o,n,r,a,s,i,l,c,d,f=0;for(;f<t;f++)if("attributes"===(a=(r=e[f]).type))s=r.attributeName,move(o=r.target,r.oldValue,o.getAttribute(s));else if("childList"===a){for(l=(i=r.addedNodes).length;l;)n=(o=i[--l]).nodeType,Node.ELEMENT_NODE===n&&add(o);for(d=(c=r.removedNodes).length;d;)n=(o=c[--d]).nodeType,Node.ELEMENT_NODE===n&&discard(o)}}function initDocumentObserver(e){console.debug("DT: initializing DOM observer on "+e),new MutationObserver(processDomChanges).observe(e,{childList:!0,subtree:!0,attributes:!0,attributeOldValue:!0,attributeFilter:["data-tie"],characterData:!1,characterDataOldValue:!1})}addRootDocument(document),console.info("DT: ... initialization DONE (took "+Math.floor(100*(performance.now()-initStartTime))/100+"ms)");