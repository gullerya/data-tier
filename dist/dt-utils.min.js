import{Observable}from"./object-observer.min.js";const DEFAULT_TIE_TARGET_PROVIDER="defaultTieTarget",CHANGE_EVENT_NAME_PROVIDER="changeEventName",PARAM_SPLITTER=/\s*=>\s*/,MULTI_PARAMS_SPLITTER=/\s*[,;]\s*/;export{ensureObservable,DEFAULT_TIE_TARGET_PROVIDER,getTargetProperty,extractViewParams,CHANGE_EVENT_NAME_PROVIDER,addChangeListener,delChangeListener,getPath,setPath};function ensureObservable(e){let t;return e?Observable.isObservable(e)||(t=Observable.from(e)):t=Observable.from({}),t}function getTargetProperty(e){let t=e[DEFAULT_TIE_TARGET_PROVIDER];if(!t){const r=e.nodeName;t="INPUT"===r&&"checkbox"===e.type?"checked":"INPUT"===r||"SELECT"===r||"TEXTAREA"===r?"value":"IMG"===r||"IFRAME"===r||"SOURCE"===r?"src":"textContent"}return t}function extractViewParams(e){let t,r=[];return e&&e.dataset&&(t=e.dataset.tie)&&(r=parseViewParams(t,e)),r}function parseViewParams(e,t){const r=[],n={},a=e.split(MULTI_PARAMS_SPLITTER),s=a.length;let o,i,l=0;for(;l<s;l++)if(o=a[l])try{(i=parseTieParam(o,t)).targetProperty in n?console.error("elements's property \""+i.targetProperty+'" tied more than once; all but first ties dismissed'):(r.push(i),n[i.targetProperty]=!0)}catch(e){console.error("failed to parse one of a multi param parts ("+o+"), skipping it",e)}return r}function parseTieParam(e,t){const r=e.split(PARAM_SPLITTER);1===r.length&&r.push(getTargetProperty(t));const n=r[0].split(":");if(!n.length||n.length>2||!n[0])throw new Error('invalid tie value; found: "'+e+'"; expected (example of multi param, one with default target): "orders:0.address.street, orders:0.address.apt => title"');const a=n.length>1?n[1]:"";return{tieKey:n[0],rawPath:a,path:a.split(".").filter(e=>e),targetProperty:r[1]}}function addChangeListener(e,t){const r=obtainChangeEventName(e);r&&e.addEventListener(r,t)}function delChangeListener(e,t){const r=obtainChangeEventName(e);r&&e.removeEventListener(r,t)}function obtainChangeEventName(e){let t=e[CHANGE_EVENT_NAME_PROVIDER];return t||"INPUT"!==e.nodeName&&"SELECT"!==e.nodeName&&"TEXTAREA"!==e.nodeName||(t="change"),t}function getPath(e,t){if(!e)return null;const r=t.length;let n,a=0;for(;a<r-1;a++)if(null===(e=e[n=t[a]])||void 0===e)return null;return e[t[a]]}function setPath(e,t,r){if(!e)return;const n=t.length;let a,s=0;for(;s<n-1;s++)e[a=t[s]]&&"object"==typeof e[a]||(e[a]={}),e=e[a];e[t[s]]=r}