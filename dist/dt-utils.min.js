import{Observable}from"./object-observer.min.js";const DEFAULT_TIE_TARGET_PROVIDER="defaultTieTarget",CHANGE_EVENT_NAME_PROVIDER="changeEventName",PARAM_SPLITTER=/\s*=>\s*/,MULTI_PARAMS_SPLITTER=/\s*[,;]\s*/,DEFAULT_VALUE_ELEMENTS={INPUT:1,SELECT:1,TEXTAREA:1},DEFAULT_SRC_ELEMENTS={IMG:1,IFRAME:1,SOURCE:1},DEFAULT_HREF_ELEMENTS={A:1,ANIMATE:1,AREA:1,BASE:1,DISCARD:1,IMAGE:1,LINK:1,PATTERN:1,use:1},DEFAULT_CHANGE_ELEMENTS={INPUT:1,SELECT:1,TEXTAREA:1};export{ensureObservable,DEFAULT_TIE_TARGET_PROVIDER,getTargetProperty,extractViewParams,CHANGE_EVENT_NAME_PROVIDER,addChangeListener,delChangeListener,getPath,setPath,setViewProperty,callViewFunction};class Parameter{constructor(e,t,r,n,a,o){this.tieKey=e,this.rawPath=t,this.path=r,this.targetProperty=n,this.isFunctional=a,this.fParams=o}}function ensureObservable(e){return e?Observable.isObservable(e)?e:Observable.from(e):Observable.from({})}function getTargetProperty(e){let t=e[DEFAULT_TIE_TARGET_PROVIDER];if(!t){const r=e.nodeName;t="INPUT"===r&&"checkbox"===e.type?"checked":r in DEFAULT_VALUE_ELEMENTS?"value":r in DEFAULT_SRC_ELEMENTS?"src":r in DEFAULT_HREF_ELEMENTS?"href":"textContent"}return t}function extractViewParams(e){const t=e.dataset.tie;return t?parseViewParams(t,e):null}function parseViewParams(e,t){const r=[],n={},a=e.split(MULTI_PARAMS_SPLITTER),o=a.length;let i,s,E,l=0;for(;l<o;l++)if((i=a[l])&&(s&&(s+=","+i),!(i.indexOf("(")>0&&(s=i).indexOf(")")<0)))try{s?(E=parseFunctionParam(s),s=null):E=parsePropertyParam(i,t),E.targetProperty in n?console.error("elements's property \""+E.targetProperty+'" tied more than once; all but first dismissed'):(r.push(E),n[E.targetProperty]=!0)}catch(e){console.error("failed to parse one of a multi param parts ("+i+"), skipping it",e)}return r}function parseFunctionParam(e){const t=e.split(/[()]/),r=t[1].split(/\s*,\s*/).map(e=>{const t=e.split(":");if(!t.length||t.length>2||!t[0])throw new Error("invalid function tied value: "+e);const r=t.length>1?t[1]:"";return{tieKey:t[0],rawPath:r,path:r.split(".").filter(e=>e)}});if(!r.length)throw new Error("functional tie parameter MUST have at least one tied argument");return new Parameter(null,null,null,t[0],!0,r)}function parsePropertyParam(e,t){const r=e.split(PARAM_SPLITTER);1===r.length&&r.push(getTargetProperty(t));const n=r[0].split(":");if(!n.length||n.length>2||!n[0])throw new Error('invalid tie value; found: "'+e+'"; expected (example of multi param, one with default target): "orders:0.address.street, orders:0.address.apt => title"');const a=n.length>1?n[1]:"";return new Parameter(n[0],a,a.split(".").filter(e=>e),r[1],!1,null)}function addChangeListener(e,t){const r=obtainChangeEventName(e);r&&e.addEventListener(r,t)}function delChangeListener(e,t){const r=obtainChangeEventName(e);r&&e.removeEventListener(r,t)}function obtainChangeEventName(e){let t=e[CHANGE_EVENT_NAME_PROVIDER];return t||e.nodeName in DEFAULT_CHANGE_ELEMENTS&&(t="change"),t}function getPath(e,t){if(!e)return null;const r=t.length;if(!r)return e;let n,a=0;for(;a<r-1;a++)if(null===(e=e[n=t[a]])||void 0===e)return e;return e[t[a]]}function setPath(e,t,r){if(!e)return;const n=t.length;let a,o,i=0;for(;i<n-1;i++)if((o=e[a=t[i]])&&"object"==typeof o)e=o;else if(void 0===o||null===o)e[a]={},e=e[a];else if("object"!=typeof o)throw new Error("setting deep path MAY NOT override primitives along the way");e[t[i]]=r}function setViewProperty(e,t,r){try{"href"===t&&"object"==typeof e.href?e.href.baseVal=r:e[t]=r}catch(e){console.error(`failed to set '${t}' of '${e}' to '${r}'`)}}function callViewFunction(e,t,r){try{e[t].apply(e,r)}catch(e){console.error(`failed to call '${t}' of '${e}' with '${r}'`)}}